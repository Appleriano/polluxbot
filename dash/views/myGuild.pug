extends layout
block head
  style.
      .atabcontainer{
        position:absolute;
        bottom:16px;
        top:16px;
      }
block content
  -let OM = sv.members.filter(m=>m.presence.status=="offline").size
  -let online = (sv.members.size)-OM
  -let svroles = sv.roles.map(r=>[r.name,r.id,r.hexColor])
  -let schans = sv.channels.filter(c=>c.type=="text").map(c=>{return {id:c.id,name:c.name,position:c.position}})
  - svchans= schans.sort((a,b)=>a.position-b.position)
  -let modrole; try{modrole = sv.roles.get(server.modules.MODROLE).name || "NONE";}catch(e){ modrole="NONE"}

    //p= JSON.stringify(server.modules.MODROLE)
    //.section.is-paddingless.division

    //.hero.is-purple.is-bold
        include navbas
        .level
          .level-item
          .level-left
            div
              p.title: b= server.name
              p(class="subtitle")!= "<b>ID </b>"+server.id
          .level-item
            div
              p
                span= online
                span /
                span=sv.members.size
                span|  Members

          .level-item
          .level-item
          .level-item
          .level-item
          .level-item
          //.level-right: img(src=server.avi).image.is-round.bitdown

        .tabs.is-boxed(style="background:rgba(224, 208, 235, 0.21)")
          ul
            li.tab(data-target="tabA").is-active: a General Settings
            li.tab(data-target="tabB"): a Channel Settings

  .hero.is-primary.is-bold

      include navbas

      .level
            .level-left
              //img(src=userinfo.pix).image(height="128px")
              div.hexagon(style="opacity:0")
                div.hexTop
                div.hexBottom
            div &#x2003
            div &#x2003
            div &#x2003
            div &#x2003
            .level-left
                div
                  p.title: b= sv.name
                  p.subtitle!= "<b>ID </b>"+userinfo.id

            .level-item
                div
                  p
                    span= online
                    span /
                    span=sv.members.size
                    span|  Members
            //.level-item
            .level-right: div: img(src=server.avi).image.is-round.bitdown.floatnglow
            .level-item


      div
        .tabs.is-centered.is-boxed.striped

          ul
            li.tab(data-target="tabA").is-active: a=translation.website.genSets || "General Settings"
            li.tab(data-target="tabB"): a=translation.website.chanSets || "Channel Settings"

  .nano: .container.nano-content.division



      .container.columns.is-fluid.gaps#tabB.tabcontainer.division2(style="height: 100%").is-hidden
        .column.is-3: .box.chandiv.nano#list: .nano-content
          each chan in svchans

            div.channel
              a.asbutton(data-channel=chan.id data-server=server.id).level
                span.level-left= "#"+ chan.name
                if bot.guilds.get(server.id).channels.get(chan.id).nsfw
                  span.icon.is-small.level-right
                    i.fa.fa-exclamation-triangle

        .column.is-5: .message.is-small.chandiv#felist.fullheight
          //b: .message-header#chaname(style="z-index:9")=translation.website.chanSets || "Channel Settings"
          .message-body.nano: #results.container.is-fluid.nano-content
        .column.is-3: .box
          p asasas

      .container(style="height:100%").columns.is-fluid.gaps#tabA.tabcontainer.division2
         .column.is-3

            .menu-label=translation.website.genSets || "General Settings"
            ul.menu-list
              li: a.is-active.itm(data-target="basic")=translation.website.basic || "Basic Options"
              li: a.itm(data-target="advanced")=translation.website.advanced || "Advanced Options"
              li: a.itm(data-target="logs")=translation.website.logs || "Activity Logs"

            .menu-label=translation.website.goodies || "Goodies"
            ul.menu-list
              li: a.itm(data-target="leader")=translation.website.svLead || "Server Leaderboards"
              li: a.itm(data-target="prodil")=translation.website.svProfile || "Server Profile"
              li: a.itm(data-target="loot")=translation.website.loots || "Loots & Drops"
              li: a.itm(data-target="bank")=translation.website.svBank || "Server Bank"

            .generally-disabled
              .menu-label=translation.website.premium || "Premium"
              ul.menu-list
                li: .itm(data-target="advanced")=translation.website.svColle || "Server Collectibles"
                br
                li: .itm(data-target="advanced")=translation.website.cherrymods || "Cherry-Modules"


         #basic.column.is-9.pgs.hidden
          include guild/settings/logs
         #advanced.column.is-9.pgs.hidden
          include guild/settings/advanced
         #logs.column.is-9.pgs
          include guild/settings/logs


      br
block scripts
  script(src="/js/guilds.js")
  script.
    $(document).ready(function(){
       $(".asbutton").first().click();
       })

        var def = {act:{userJoin:true,userLeave:true,messDel:false,messEdit:false},mod:{usrBan:true,usrKick:true,usrMute:true,usrUnmute:true},adv:{newChan:false,newRole:false,permsEdit:false,revokeBan:true,uptRole:false,delChan:false,usrNick:true,usrPhoto:false,usrRoles:false}};

        var slogs;
         slogs = !{JSON.stringify(server.logs) || false}
          slogs ? slogs = slogs : slogs = def;

    function getChecks(){

        var serverlogs = slogs

        if(typeof serverlogs != "object") serverlogs = def

        $(".check").each(function(){
        var classi  = $(this).data("type")
        var item    = $(this).data("key")
        serverlogs[classi][item] = this.checked

        })
        return  serverlogs
    }


        function reset(_default=false){
        var slo     = slogs
        var curr    = getChecks()


        $(".check").each(function(){
        var classi  = $(this).data("type")
        var item    = $(this).data("key")
        if(_default && def[classi][item]!=curr[classi][item])$(this).click();
        if(_default==false && slo[classi][item]!=curr[classi][item].toString())$(this).click();



        })
    }


    function save(){

              //if(!serverlogs) var serverlogs= !{JSON.stringify(server.logs)};
              var postage = $.post("/paramsave", {
                action: "superDef"  ,
                scope:  "server" ,
                target: !{server.id} || !{sv.id} ,
                param:  "logs",
                value:  getChecks()

              })

               postage.done(function (res) {

                        swal({
                        title: res.t,
                        text: res.m,
                        type: res.s,
                        confirmButtonColor: res.c,
                        confirmButtonText: res.b,
                        closeOnConfirm: true,
                        // showLoaderOnConfirm: true,
                      })

               })

               }
